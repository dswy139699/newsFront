{"remainingRequest":"/Users/yushengnan/ysn/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yushengnan/ysn/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yushengnan/ysn/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yushengnan/ysn/src/views/solicitManage/school/index.vue?vue&type=template&id=160862e6&scoped=true&","dependencies":[{"path":"/Users/yushengnan/ysn/src/views/solicitManage/school/index.vue","mtime":1617780884318},{"path":"/Users/yushengnan/ysn/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushengnan/ysn/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yushengnan/ysn/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushengnan/ysn/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}