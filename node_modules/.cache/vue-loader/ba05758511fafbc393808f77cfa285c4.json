{"remainingRequest":"/Users/yushengnan/bysj/ysn/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yushengnan/bysj/ysn/src/views/user.vue?vue&type=style&index=0&id=e8694536&scoped=true&lang=less&","dependencies":[{"path":"/Users/yushengnan/bysj/ysn/src/views/user.vue","mtime":1650706517228},{"path":"/Users/yushengnan/bysj/ysn/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushengnan/bysj/ysn/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yushengnan/bysj/ysn/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yushengnan/bysj/ysn/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushengnan/bysj/ysn/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushengnan/bysj/ysn/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnLi9zdHlsZS5sZXNzJzsKLmNvbnRlbnR7CiAgICBiYWNrZ3JvdW5kOiAjZmZmOwogICAgcGFkZGluZzoyMHB4OwogICAgYm9yZGVyLXJhZGl1czoycHg7Cn0K"},{"version":3,"sources":["user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiUA;AACA;AACA;AACA;AACA;AACA","file":"user.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <page-header-wrapper>\n        <template v-slot:content>\n            <div class=\"page-header-content\">\n            </div>\n        </template>\n        <div class=\"content\">\n            <GlobalForm :dataSource=\"getFormData\" ref=\"schoolSerch\" id=\"schoolSearch\">\n                <template v-slot:button>\n                    <div style=\"margin-top:4px;text-align: right\">\n                        <a-button type=\"primary\" @click=\"search\">\n                            查询\n                        </a-button>\n                        <a-button style=\"margin-left:10px\" @click=\"reset\">\n                            重置\n                        </a-button>\n                    </div>\n                </template>\n            </GlobalForm>\n            <div style=\"text-align: left\">\n                <a-button type=\"primary\" @click=\"increase\">\n                    新增\n                </a-button>\n            </div>\n            <div class=\"table\" style=\"margin-top:10px;\">\n                <a-table\n                        :columns=\"columns\"\n                        :data-source=\"data\"\n                        @change=\"changePage\"\n                        :loading=\"loading\"\n                        :pagination=\"pagination\"\n                        :rowKey=\"record=>record.id\"\n                >\n          <span slot=\"action\" slot-scope=\"{text,row}\">\n            <a @click=\"onEdit(row)\">编辑</a>\n            <a-divider type=\"vertical\" />\n            <a-popconfirm\n                    title=\"确定删除?\"\n                    ok-text=\"是\"\n                    cancel-text=\"否\"\n                    @confirm=\"delSchool(row)\"\n            >\n              <a >删除</a>\n            </a-popconfirm>\n            <a-divider type=\"vertical\" />\n            <a @click=\"onEdit(row)\">添加新闻</a>\n\n          </span>\n                </a-table>\n            </div>\n            <div class=\"modal\">\n                <a-modal\n                        :title=\"title\"\n                        :visible=\"visible\"\n                        @cancel=\"cancel\"\n                        @ok=\"handelOk\"\n                >\n                    <div class=\"increase\">\n                        <GlobalForm ref=\"increaseDom\" :dataSource=\"getIncreaseForm\" id=\"increaseDom\">\n                        </GlobalForm>\n                    </div>\n                </a-modal>\n            </div>\n        </div>\n    </page-header-wrapper>\n</template>\n\n<script>\n    import { formData } from './formData'\n    const columns = [\n        {\n            title: '用户昵称',\n            dataIndex: 'title',\n            key: 'title',\n            width: 450,\n            ellipsis: true\n        },\n        {\n            title: '手机号',\n            dataIndex: 'content',\n            key: 'content',\n            width: 450,\n            ellipsis: true\n        },\n        {\n            title: '操作',\n            key: 'action',\n            scopedSlots: { customRender: 'action' }\n        }\n    ]\n    export default {\n        name: 'Users',\n        data () {\n            return {\n                columns,\n                visibleNotice: false,\n                title: '新增用户',\n                loading: true,\n                noticeInfo: null,\n                editInfo: null, // 需要编辑的该条数据的信息\n                visible: false,\n                searchData: {}, // 查询条件\n                data: [],\n                pagination: {// 分页\n                    current: 1,\n                    pageSize: 20,\n                    total: 0\n                }\n            }\n        },\n        computed: {\n            getFormData () {\n                return formData.getFormData(this, 'users')\n            },\n            getIncreaseForm () {\n                return formData.getIncreaseForm(this, 'users')\n            }\n        },\n        mounted () {\n            // this.getSchoolForPage({ pageIndex: this.pagination.current, pageSize: this.pagination.pageSize })\n        },\n        methods: {\n            beforeUpload (file) {\n                // application/pdf\n                // console.log(file)\n                // if (file && file.name && (file.name.indexOf('.') !== -1) && file.name.split('.')[file.name.split('.').length - 1].toUpperCase() === 'PDF') {\n                //   return true\n                // } else {\n                //   this.$notification.error({\n                //     message: '只能上传PDF文件'\n                //   })\n                //   return false\n                // }\n                if (file && file.type && file.type === 'application/pdf') {\n                    return true\n                } else {\n                    this.$notification.error({\n                        message: '只能上传PDF文件'\n                    })\n                    return false\n                }\n            },\n            onChange (data) {\n                this.$store.dispatch('GetCourse', { schoolId: data })\n                this.selectedRowKeysIncrease = []\n                this.selectedListInfo = []\n            },\n            customRequest (data) {\n                const formData = new FormData()\n                formData.append('files', data.file)\n                formData.append('process_config_type', this.initData.init_value.process_config_type)\n                formData.append('process_base_work_flow_number', this.initData.init_value.process_base_work_flow_number)\n                return new Promise((resolve, reject) => {\n                    // service.uploadProcessFile(formData).then(response => {\n                    //   this.$notification.success({\n                    //     message: '文件上传成功'\n                    //   })\n                    //   this.fileData = response[0]\n                    // })\n                    //         .catch(() => {\n                    //   this.$notification.error({\n                    //     message: '文件上传失败'\n                    //   })\n                    // })\n                })\n            },\n            // check (rule, value, callback) {\n            //   if (value && value.length < 7) {\n            //     const title = '密码不少于六位数'\n            //     callback(title)\n            //   } else {\n            //     callback()\n            //   }\n            // },\n            // 分页切换\n            changePage (pagination) {\n                this.pagination.current = pagination.current\n                this.getSchoolForPage({ pageIndex: pagination.current, pageSize: this.pagination.pageSize, ...this.searchData })\n                // this.getProcessList({ process_label: 'Done', pageIndex: pagination.current, pageSize: this.pagination.pageSize, process_config_type: 'individualCase', ...this.params })\n            },\n            increase () { // 新增\n                this.title = '新增用户'\n                this.visible = true\n                this.editInfo = null\n            },\n            onEdit (data) {\n                const newData = this._.cloneDeep(data)\n                this.title = '编辑用户'\n                this.editInfo = data\n                this.visible = true\n                delete newData.id\n                this.$nextTick(() => { // 延时，不然dom没有加载出来\n                    setTimeout(() => {\n                        this.$refs.increaseDom.setFieldsValue({\n                            name: newData.name,\n                            loginId: newData.loginId,\n                            importType: newData.importType\n                        })\n                    })\n                })\n            },\n            handelOk () { // 新增确定\n                const params = this.$refs.increaseDom.handleSubmit()\n                // console.log(params)\n                if (params) {\n                    if (this.editInfo) { // 编辑情况\n                        this.updateSchool({ ...this.editInfo, ...params })\n                    } else { // 新增情况\n                        this.saveSchool(params)\n                    }\n                    // this.cancel()\n                }\n            },\n            cancel () {\n                this.$refs.increaseDom.resetFields()\n                this.visible = false\n            },\n\n            handelOkNotice () {\n                // const params = this.$refs.notice.handleSubmit()\n                // services.updateSchool({ ...this.noticeInfo, notice: params.notice }).then(response => {\n                //     this.$notification.success({\n                //         message: '更新成功'\n                //     })\n                //     this.$store.dispatch('GetSchool')\n                //     // this.searchData = {}\n                //     // this.pagination.current = 1\n                //     this.getSchoolForPage({\n                //         pageIndex: this.pagination.current,\n                //         pageSize: this.pagination.pageSize,\n                //         ...this.searchData\n                //     })\n                // })\n                // this.visibleNotice = false\n            },\n            search () { // 查询\n                const params = this.$refs.schoolSerch.getFieldsValue()\n                this.searchData = params\n                this.pagination.current = 1\n                this.getSchoolForPage({ pageIndex: 1, pageSize: this.pagination.pageSize, ...params })\n            },\n            reset () { // 重置\n                this.searchData = {}\n                this.$refs.schoolSerch.resetFields()\n            },\n\n            getSchoolForPage (data) { // 分页查询\n                // this.loading = true\n                // services.getSchoolForPage(data).then(response => {\n                //     this.data = response.records || []\n                //     this.pagination.total = response.total || 0\n                //     this.loading = false\n                // })\n            },\n            saveSchool (data) { // 新增\n                // services.saveSchool(data).then(response => {\n                //     this.$notification.success({\n                //         message: '新增成功'\n                //     })\n                //     this.$store.dispatch('GetSchool')\n                //     // this.searchData = {}\n                //     // this.pagination.current = 1\n                //     this.cancel()\n                //     this.getSchoolForPage({\n                //         pageIndex: this.pagination.current,\n                //         pageSize: this.pagination.pageSize,\n                //         ...this.searchData\n                //     })\n                // })\n            },\n            updateSchool (data) { // 更新\n                // services.updateSchool(data).then(response => {\n                //     this.$notification.success({\n                //         message: '更新成功'\n                //     })\n                //     this.cancel()\n                //     this.$store.dispatch('GetSchool')\n                //     // this.searchData = {}\n                //     // this.pagination.current = 1\n                //     this.getSchoolForPage({\n                //         pageIndex: this.pagination.current,\n                //         pageSize: this.pagination.pageSize,\n                //         ...this.searchData\n                //     })\n                // })\n            },\n            delSchool (data) {\n                // services.delSchool({ idList: [data.id] }).then(response => {\n                //     this.$notification.success({\n                //         message: '删除成功'\n                //     })\n                //     this.$store.dispatch('GetSchool')\n                //     // this.searchData = {}\n                //     // this.pagination.current = 1\n                //     this.getSchoolForPage({\n                //         pageIndex: this.pagination.current,\n                //         pageSize: this.pagination.pageSize,\n                //         ...this.searchData\n                //     })\n                // })\n            },\n            onChange (value, data, id) {\n                // services.updateSchool({ ...data, [id]: value ? 1 : 0 }).then(response => {\n                //     this.$notification.success({\n                //         message: '更新成功'\n                //     })\n                //     this.$store.dispatch('GetSchool')\n                //     // this.searchData = {}\n                //     // this.pagination.current = 1\n                //     this.getSchoolForPage({\n                //         pageIndex: this.pagination.current,\n                //         pageSize: this.pagination.pageSize,\n                //         ...this.searchData\n                //     })\n                // })\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"less\">\n    @import './style.less';\n    .content{\n        background: #fff;\n        padding:20px;\n        border-radius:2px;\n    }\n</style>\n"]}]}