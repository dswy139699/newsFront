{"remainingRequest":"/Users/yushengnan/bysj/ysn/node_modules/babel-loader/lib/index.js!/Users/yushengnan/bysj/ysn/node_modules/eslint-loader/index.js??ref--13-0!/Users/yushengnan/bysj/ysn/src/permission.js","dependencies":[{"path":"/Users/yushengnan/bysj/ysn/src/permission.js","mtime":1650638108790},{"path":"/Users/yushengnan/bysj/ysn/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushengnan/bysj/ysn/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yushengnan/bysj/ysn/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3l1c2hlbmduYW4vYnlzai95c24vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnOwppbXBvcnQgTlByb2dyZXNzIGZyb20gJ25wcm9ncmVzcyc7IC8vIHByb2dyZXNzIGJhcgoKaW1wb3J0ICdAL2NvbXBvbmVudHMvTlByb2dyZXNzL25wcm9ncmVzcy5sZXNzJzsgLy8gcHJvZ3Jlc3MgYmFyIGN1c3RvbSBzdHlsZQoKaW1wb3J0IHsgc2V0RG9jdW1lbnRUaXRsZSwgZG9tVGl0bGUgfSBmcm9tICdAL3V0aWxzL2RvbVV0aWwnOwppbXBvcnQgeyBpMThuUmVuZGVyIH0gZnJvbSAnQC9sb2NhbGVzJzsKaW1wb3J0IHsgTFN0b3JhZ2UgfSBmcm9tICdAL3N0b3JlL3Nlc3Npb24uanMnOwpOUHJvZ3Jlc3MuY29uZmlndXJlKHsKICBzaG93U3Bpbm5lcjogZmFsc2UKfSk7IC8vIE5Qcm9ncmVzcyBDb25maWd1cmF0aW9uCgp2YXIgd2hpdGVMaXN0ID0gWydsb2dpbicsICdzdHVkZW50TG9naW4nXTsgLy8gbm8gcmVkaXJlY3Qgd2hpdGVsaXN0Cgp2YXIgbG9naW5Sb3V0ZVBhdGggPSAnL3VzZXIvbG9naW4nOwp2YXIgZGVmYXVsdFJvdXRlUGF0aCA9ICcvYm9vay9zb2xpY2l0TWFuYWdlL2NvdXJzZU1hbmFnZSc7CnJvdXRlci5iZWZvcmVFYWNoKGZ1bmN0aW9uICh0bywgZnJvbSwgbmV4dCkgewogIE5Qcm9ncmVzcy5zdGFydCgpOyAvLyBzdGFydCBwcm9ncmVzcyBiYXIKCiAgdG8ubWV0YSAmJiB0eXBlb2YgdG8ubWV0YS50aXRsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgc2V0RG9jdW1lbnRUaXRsZSgiIi5jb25jYXQoaTE4blJlbmRlcih0by5tZXRhLnRpdGxlKSwgIiAtICIpLmNvbmNhdChkb21UaXRsZSkpOwogIC8qIGhhcyB0b2tlbiAqLwoKICBpZiAoTFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSkgewogICAgaWYgKHRvLnBhdGggPT09IGxvZ2luUm91dGVQYXRoKSB7CiAgICAgIG5leHQoewogICAgICAgIHBhdGg6IGRlZmF1bHRSb3V0ZVBhdGgKICAgICAgfSk7CiAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICB9IGVsc2UgewogICAgICBpZiAoIXN0b3JlLmdldHRlcnMubmlja25hbWUpIHsKICAgICAgICAvLyDlvZPpobXpnaLliLfmlrDml7YKICAgICAgICBzdG9yZS5kaXNwYXRjaCgnR2V0SW5mbycpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgLy8gc3RvcmUuZGlzcGF0Y2goJ0dldFNjaG9vbCcpLnRoZW4oKS5jYXRjaCgpLmZpbmFsbHkoKCkgPT4gewogICAgICAgICAgLy8gc3RvcmUuZGlzcGF0Y2goJ0dldENsYXNzJykKICAgICAgICAgIHZhciBwZXJtaXNzaW9uID0gW107CiAgICAgICAgICBzdG9yZS5kaXNwYXRjaCgnR2VuZXJhdGVSb3V0ZXMnLCB7CiAgICAgICAgICAgIHJvbGVzOiBwZXJtaXNzaW9uLAogICAgICAgICAgICB1c2VyOiByZXMudXNlciB8fCB7fQogICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIC8vIOWGmeatu+inkuiJsu+8jOWunumZheW6lOivpeagueaNruWQjuWPsOS8oOi/h+adpeeahOinkuiJsuS/oeaBrwogICAgICAgICAgICAvLyDmoLnmja5yb2xlc+adg+mZkOeUn+aIkOWPr+iuv+mXrueahOi3r+eUseihqAogICAgICAgICAgICAvLyDliqjmgIHmt7vliqDlj6/orr/pl67ot6/nlLHooagKICAgICAgICAgICAgcm91dGVyLmFkZFJvdXRlcyhzdG9yZS5nZXR0ZXJzLmFkZFJvdXRlcnMpOyAvLyDor7fmsYLluKbmnIkgcmVkaXJlY3Qg6YeN5a6a5ZCR5pe277yM55m75b2V6Ieq5Yqo6YeN5a6a5ZCR5Yiw6K+l5Zyw5Z2ACgogICAgICAgICAgICB2YXIgcmVkaXJlY3QgPSBkZWNvZGVVUklDb21wb25lbnQoZnJvbS5xdWVyeS5yZWRpcmVjdCB8fCB0by5wYXRoKTsKCiAgICAgICAgICAgIGlmICh0by5wYXRoID09PSByZWRpcmVjdCkgewogICAgICAgICAgICAgIG5leHQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0byksIHt9LCB7CiAgICAgICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIOi3s+i9rOWIsOebrueahOi3r+eUsQogICAgICAgICAgICAgIG5leHQoewogICAgICAgICAgICAgICAgcGF0aDogcmVkaXJlY3QKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSkgLy8gfSkKICAgICAgICBbImNhdGNoIl0oZnVuY3Rpb24gKCkgewogICAgICAgICAgLy8g5aSx6LSl5pe277yM6I635Y+W55So5oi35L+h5oGv5aSx6LSl5pe277yM6LCD55So55m75Ye677yM5p2l5riF56m65Y6G5Y+y5L+d55WZ5L+h5oGvCiAgICAgICAgICAvLyBpZiAoc3RvcmUuZ2V0dGVycy51c2VySW5mby51c2VyVHlwZT8udXNlclR5cGUgPT09ICdzdHVkZW50JykgewogICAgICAgICAgLy8gICBzdG9yZS5kaXNwYXRjaCgnT25DbGVhcicpLnRoZW4oKCkgPT4gewogICAgICAgICAgLy8gICAgIG5leHQoeyBwYXRoOiAnL3N0dWRlbnQnLCBxdWVyeTogeyByZWRpcmVjdDogdG8uZnVsbFBhdGggfSB9KQogICAgICAgICAgLy8gICB9KQogICAgICAgICAgLy8gfSBlbHNlIHsKICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCdPbkNsZWFyJykudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIG5leHQoewogICAgICAgICAgICAgIHBhdGg6IGxvZ2luUm91dGVQYXRoLAogICAgICAgICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICAgICAgICByZWRpcmVjdDogdG8uZnVsbFBhdGgKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7IC8vIH0KICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyDlvZPpobXpnaLmsqHmnInliLfmlrDml7YKICAgICAgICBuZXh0KCk7CiAgICAgIH0KICAgIH0KICB9IGVsc2UgewogICAgaWYgKHdoaXRlTGlzdC5pbmNsdWRlcyh0by5uYW1lKSkgewogICAgICAvLyDlnKjlhY3nmbvlvZXnmb3lkI3ljZXvvIznm7TmjqXov5vlhaUKICAgICAgbmV4dCgpOwogICAgfSBlbHNlIHsKICAgICAgbmV4dCh7CiAgICAgICAgcGF0aDogbG9naW5Sb3V0ZVBhdGgsCiAgICAgICAgcXVlcnk6IHsKICAgICAgICAgIHJlZGlyZWN0OiB0by5mdWxsUGF0aAogICAgICAgIH0KICAgICAgfSk7CiAgICAgIE5Qcm9ncmVzcy5kb25lKCk7IC8vIGlmIGN1cnJlbnQgcGFnZSBpcyBsb2dpbiB3aWxsIG5vdCB0cmlnZ2VyIGFmdGVyRWFjaCBob29rLCBzbyBtYW51YWxseSBoYW5kbGUgaXQKICAgIH0KICB9Cn0pOwpyb3V0ZXIuYWZ0ZXJFYWNoKGZ1bmN0aW9uICgpIHsKICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7CiAgTlByb2dyZXNzLmRvbmUoKTsgLy8gZmluaXNoIHByb2dyZXNzIGJhcgp9KTs="},{"version":3,"sources":["/Users/yushengnan/bysj/ysn/src/permission.js"],"names":["router","store","NProgress","setDocumentTitle","domTitle","i18nRender","LStorage","configure","showSpinner","whiteList","loginRoutePath","defaultRoutePath","beforeEach","to","from","next","start","meta","title","getItem","path","done","getters","nickname","dispatch","then","res","permission","roles","user","addRoutes","addRouters","redirect","decodeURIComponent","query","replace","fullPath","includes","name","afterEach","window","scrollTo"],"mappings":"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","sourcesContent":["import router from './router'\nimport store from './store'\nimport NProgress from 'nprogress' // progress bar\nimport '@/components/NProgress/nprogress.less' // progress bar custom style\nimport { setDocumentTitle, domTitle } from '@/utils/domUtil'\nimport { i18nRender } from '@/locales'\nimport { LStorage } from '@/store/session.js'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['login', 'studentLogin'] // no redirect whitelist\nconst loginRoutePath = '/user/login'\nconst defaultRoutePath = '/book/solicitManage/courseManage'\n\nrouter.beforeEach((to, from, next) => {\n  NProgress.start() // start progress bar\n  to.meta && (typeof to.meta.title !== 'undefined' && setDocumentTitle(`${i18nRender(to.meta.title)} - ${domTitle}`))\n  /* has token */\n  if (LStorage.getItem('token')) {\n    if (to.path === loginRoutePath) {\n      next({ path: defaultRoutePath })\n      NProgress.done()\n    } else {\n      if (!store.getters.nickname) { // 当页面刷新时\n        store\n          .dispatch('GetInfo')\n          .then(res => {\n            // store.dispatch('GetSchool').then().catch().finally(() => {\n            // store.dispatch('GetClass')\n            const permission = []\n            store.dispatch('GenerateRoutes', { roles: permission, user: res.user || {} }).then(() => { // 写死角色，实际应该根据后台传过来的角色信息\n              // 根据roles权限生成可访问的路由表\n              // 动态添加可访问路由表\n              router.addRoutes(store.getters.addRouters)\n              // 请求带有 redirect 重定向时，登录自动重定向到该地址\n              const redirect = decodeURIComponent(from.query.redirect || to.path)\n              if (to.path === redirect) {\n                  next({ ...to, replace: true })\n              } else {\n                // 跳转到目的路由\n                next({ path: redirect })\n              }\n            })\n            })\n          // })\n          .catch(() => {\n            // 失败时，获取用户信息失败时，调用登出，来清空历史保留信息\n            // if (store.getters.userInfo.userType?.userType === 'student') {\n            //   store.dispatch('OnClear').then(() => {\n            //     next({ path: '/student', query: { redirect: to.fullPath } })\n            //   })\n            // } else {\n              store.dispatch('OnClear').then(() => {\n                next({ path: loginRoutePath, query: { redirect: to.fullPath } })\n              })\n            // }\n          })\n      } else { // 当页面没有刷新时\n          next()\n      }\n    }\n  } else {\n    if (whiteList.includes(to.name)) {\n      // 在免登录白名单，直接进入\n      next()\n    } else {\n      next({ path: loginRoutePath, query: { redirect: to.fullPath } })\n      NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  window.scrollTo(0, 0)\n  NProgress.done() // finish progress bar\n})\n"]}]}