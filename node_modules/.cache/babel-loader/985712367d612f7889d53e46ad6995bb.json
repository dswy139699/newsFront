{"remainingRequest":"/Users/yushengnan/bysj/ysn/node_modules/babel-loader/lib/index.js!/Users/yushengnan/bysj/ysn/node_modules/eslint-loader/index.js??ref--13-0!/Users/yushengnan/bysj/ysn/src/permission.js","dependencies":[{"path":"/Users/yushengnan/bysj/ysn/src/permission.js","mtime":1650685425356},{"path":"/Users/yushengnan/bysj/ysn/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushengnan/bysj/ysn/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yushengnan/bysj/ysn/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3l1c2hlbmduYW4vYnlzai95c24vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnOwppbXBvcnQgTlByb2dyZXNzIGZyb20gJ25wcm9ncmVzcyc7IC8vIHByb2dyZXNzIGJhcgoKaW1wb3J0ICdAL2NvbXBvbmVudHMvTlByb2dyZXNzL25wcm9ncmVzcy5sZXNzJzsgLy8gcHJvZ3Jlc3MgYmFyIGN1c3RvbSBzdHlsZQoKaW1wb3J0IHsgc2V0RG9jdW1lbnRUaXRsZSwgZG9tVGl0bGUgfSBmcm9tICdAL3V0aWxzL2RvbVV0aWwnOwppbXBvcnQgeyBpMThuUmVuZGVyIH0gZnJvbSAnQC9sb2NhbGVzJzsKaW1wb3J0IHsgTFN0b3JhZ2UgfSBmcm9tICdAL3N0b3JlL3Nlc3Npb24uanMnOwpOUHJvZ3Jlc3MuY29uZmlndXJlKHsKICBzaG93U3Bpbm5lcjogZmFsc2UKfSk7IC8vIE5Qcm9ncmVzcyBDb25maWd1cmF0aW9uCgp2YXIgd2hpdGVMaXN0ID0gWydsb2dpbicsICdzdHVkZW50TG9naW4nXTsgLy8gbm8gcmVkaXJlY3Qgd2hpdGVsaXN0Cgp2YXIgbG9naW5Sb3V0ZVBhdGggPSAnL3VzZXIvbG9naW4nOwp2YXIgZGVmYXVsdFJvdXRlUGF0aCA9ICcvaXRlbS9tYW5hZ2UnOwpyb3V0ZXIuYmVmb3JlRWFjaChmdW5jdGlvbiAodG8sIGZyb20sIG5leHQpIHsKICBOUHJvZ3Jlc3Muc3RhcnQoKTsgLy8gc3RhcnQgcHJvZ3Jlc3MgYmFyCgogIHRvLm1ldGEgJiYgdHlwZW9mIHRvLm1ldGEudGl0bGUgIT09ICd1bmRlZmluZWQnICYmIHNldERvY3VtZW50VGl0bGUoIiIuY29uY2F0KGkxOG5SZW5kZXIodG8ubWV0YS50aXRsZSksICIgLSAiKS5jb25jYXQoZG9tVGl0bGUpKTsKICAvKiBoYXMgdG9rZW4gKi8KCiAgaWYgKExTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykpIHsKICAgIGlmICh0by5wYXRoID09PSBsb2dpblJvdXRlUGF0aCkgewogICAgICBuZXh0KHsKICAgICAgICBwYXRoOiBkZWZhdWx0Um91dGVQYXRoCiAgICAgIH0pOwogICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwogICAgfSBlbHNlIHsKICAgICAgaWYgKCFzdG9yZS5nZXR0ZXJzLm5pY2tuYW1lKSB7CiAgICAgICAgLy8g5b2T6aG16Z2i5Yi35paw5pe2CiAgICAgICAgc3RvcmUuZGlzcGF0Y2goJ0dldEluZm8nKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIC8vIHN0b3JlLmRpc3BhdGNoKCdHZXRTY2hvb2wnKS50aGVuKCkuY2F0Y2goKS5maW5hbGx5KCgpID0+IHsKICAgICAgICAgIC8vIHN0b3JlLmRpc3BhdGNoKCdHZXRDbGFzcycpCiAgICAgICAgICB2YXIgcGVybWlzc2lvbiA9IFtdOwogICAgICAgICAgc3RvcmUuZGlzcGF0Y2goJ0dlbmVyYXRlUm91dGVzJywgewogICAgICAgICAgICByb2xlczogcGVybWlzc2lvbiwKICAgICAgICAgICAgdXNlcjogcmVzLnVzZXIgfHwge30KICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAvLyDlhpnmrbvop5LoibLvvIzlrp7pmYXlupTor6XmoLnmja7lkI7lj7DkvKDov4fmnaXnmoTop5LoibLkv6Hmga8KICAgICAgICAgICAgLy8g5qC55o2ucm9sZXPmnYPpmZDnlJ/miJDlj6/orr/pl67nmoTot6/nlLHooagKICAgICAgICAgICAgLy8g5Yqo5oCB5re75Yqg5Y+v6K6/6Zeu6Lev55Sx6KGoCiAgICAgICAgICAgIHJvdXRlci5hZGRSb3V0ZXMoc3RvcmUuZ2V0dGVycy5hZGRSb3V0ZXJzKTsgLy8g6K+35rGC5bim5pyJIHJlZGlyZWN0IOmHjeWumuWQkeaXtu+8jOeZu+W9leiHquWKqOmHjeWumuWQkeWIsOivpeWcsOWdgAoKICAgICAgICAgICAgdmFyIHJlZGlyZWN0ID0gZGVjb2RlVVJJQ29tcG9uZW50KGZyb20ucXVlcnkucmVkaXJlY3QgfHwgdG8ucGF0aCk7CgogICAgICAgICAgICBpZiAodG8ucGF0aCA9PT0gcmVkaXJlY3QpIHsKICAgICAgICAgICAgICBuZXh0KF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdG8pLCB7fSwgewogICAgICAgICAgICAgICAgcmVwbGFjZTogdHJ1ZQogICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyDot7PovazliLDnm67nmoTot6/nlLEKICAgICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICAgIHBhdGg6IHJlZGlyZWN0CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOyAvLyB9KQogICAgICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIC8vIOWksei0peaXtu+8jOiOt+WPlueUqOaIt+S/oeaBr+Wksei0peaXtu+8jOiwg+eUqOeZu+WHuu+8jOadpea4heepuuWOhuWPsuS/neeVmeS/oeaBrwogICAgICAgICAgLy8gaWYgKHN0b3JlLmdldHRlcnMudXNlckluZm8udXNlclR5cGU/LnVzZXJUeXBlID09PSAnc3R1ZGVudCcpIHsKICAgICAgICAgIC8vICAgc3RvcmUuZGlzcGF0Y2goJ09uQ2xlYXInKS50aGVuKCgpID0+IHsKICAgICAgICAgIC8vICAgICBuZXh0KHsgcGF0aDogJy9zdHVkZW50JywgcXVlcnk6IHsgcmVkaXJlY3Q6IHRvLmZ1bGxQYXRoIH0gfSkKICAgICAgICAgIC8vICAgfSkKICAgICAgICAgIC8vIH0gZWxzZSB7CiAgICAgICAgICBzdG9yZS5kaXNwYXRjaCgnT25DbGVhcicpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICBwYXRoOiBsb2dpblJvdXRlUGF0aCwKICAgICAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICAgICAgcmVkaXJlY3Q6IHRvLmZ1bGxQYXRoCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOyAvLyB9CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8g5b2T6aG16Z2i5rKh5pyJ5Yi35paw5pe2CiAgICAgICAgbmV4dCgpOwogICAgICB9CiAgICB9CiAgfSBlbHNlIHsKICAgIGlmICh3aGl0ZUxpc3QuaW5jbHVkZXModG8ubmFtZSkpIHsKICAgICAgLy8g5Zyo5YWN55m75b2V55m95ZCN5Y2V77yM55u05o6l6L+b5YWlCiAgICAgIG5leHQoKTsKICAgIH0gZWxzZSB7CiAgICAgIG5leHQoewogICAgICAgIHBhdGg6IGxvZ2luUm91dGVQYXRoLAogICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICByZWRpcmVjdDogdG8uZnVsbFBhdGgKICAgICAgICB9CiAgICAgIH0pOwogICAgICBOUHJvZ3Jlc3MuZG9uZSgpOyAvLyBpZiBjdXJyZW50IHBhZ2UgaXMgbG9naW4gd2lsbCBub3QgdHJpZ2dlciBhZnRlckVhY2ggaG9vaywgc28gbWFudWFsbHkgaGFuZGxlIGl0CiAgICB9CiAgfQp9KTsKcm91dGVyLmFmdGVyRWFjaChmdW5jdGlvbiAoKSB7CiAgd2luZG93LnNjcm9sbFRvKDAsIDApOwogIE5Qcm9ncmVzcy5kb25lKCk7IC8vIGZpbmlzaCBwcm9ncmVzcyBiYXIKfSk7"},{"version":3,"sources":["/Users/yushengnan/bysj/ysn/src/permission.js"],"names":["router","store","NProgress","setDocumentTitle","domTitle","i18nRender","LStorage","configure","showSpinner","whiteList","loginRoutePath","defaultRoutePath","beforeEach","to","from","next","start","meta","title","getItem","path","done","getters","nickname","dispatch","then","res","permission","roles","user","addRoutes","addRouters","redirect","decodeURIComponent","query","replace","fullPath","includes","name","afterEach","window","scrollTo"],"mappings":"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","sourcesContent":["import router from './router'\nimport store from './store'\nimport NProgress from 'nprogress' // progress bar\nimport '@/components/NProgress/nprogress.less' // progress bar custom style\nimport { setDocumentTitle, domTitle } from '@/utils/domUtil'\nimport { i18nRender } from '@/locales'\nimport { LStorage } from '@/store/session.js'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['login', 'studentLogin'] // no redirect whitelist\nconst loginRoutePath = '/user/login'\nconst defaultRoutePath = '/item/manage'\n\nrouter.beforeEach((to, from, next) => {\n  NProgress.start() // start progress bar\n  to.meta && (typeof to.meta.title !== 'undefined' && setDocumentTitle(`${i18nRender(to.meta.title)} - ${domTitle}`))\n  /* has token */\n  if (LStorage.getItem('token')) {\n    if (to.path === loginRoutePath) {\n      next({ path: defaultRoutePath })\n      NProgress.done()\n    } else {\n      if (!store.getters.nickname) { // 当页面刷新时\n        store\n          .dispatch('GetInfo')\n          .then(res => {\n            // store.dispatch('GetSchool').then().catch().finally(() => {\n            // store.dispatch('GetClass')\n            const permission = []\n            store.dispatch('GenerateRoutes', { roles: permission, user: res.user || {} }).then(() => { // 写死角色，实际应该根据后台传过来的角色信息\n              // 根据roles权限生成可访问的路由表\n              // 动态添加可访问路由表\n              router.addRoutes(store.getters.addRouters)\n              // 请求带有 redirect 重定向时，登录自动重定向到该地址\n              const redirect = decodeURIComponent(from.query.redirect || to.path)\n              if (to.path === redirect) {\n                  next({ ...to, replace: true })\n              } else {\n                // 跳转到目的路由\n                next({ path: redirect })\n              }\n            })\n            // })\n          })\n          .catch(() => {\n            // 失败时，获取用户信息失败时，调用登出，来清空历史保留信息\n            // if (store.getters.userInfo.userType?.userType === 'student') {\n            //   store.dispatch('OnClear').then(() => {\n            //     next({ path: '/student', query: { redirect: to.fullPath } })\n            //   })\n            // } else {\n              store.dispatch('OnClear').then(() => {\n                next({ path: loginRoutePath, query: { redirect: to.fullPath } })\n              })\n            // }\n          })\n      } else { // 当页面没有刷新时\n          next()\n      }\n    }\n  } else {\n    if (whiteList.includes(to.name)) {\n      // 在免登录白名单，直接进入\n      next()\n    } else {\n      next({ path: loginRoutePath, query: { redirect: to.fullPath } })\n      NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  window.scrollTo(0, 0)\n  NProgress.done() // finish progress bar\n})\n"]}]}