{"remainingRequest":"/Users/yushengnan/bysj/ysn/node_modules/babel-loader/lib/index.js!/Users/yushengnan/bysj/ysn/node_modules/eslint-loader/index.js??ref--13-0!/Users/yushengnan/bysj/ysn/src/store/modules/permission.js","dependencies":[{"path":"/Users/yushengnan/bysj/ysn/src/store/modules/permission.js","mtime":1650638199600},{"path":"/Users/yushengnan/bysj/ysn/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushengnan/bysj/ysn/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yushengnan/bysj/ysn/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0IHsgYXN5bmNSb3V0ZXJNYXAsIGNvbnN0YW50Um91dGVyTWFwIH0gZnJvbSAnQC9jb25maWcvcm91dGVyLmNvbmZpZyc7CmltcG9ydCBsb2Rhc2ggZnJvbSAnbG9kYXNoJzsKLyoqCiAqIOi/h+a7pOi0puaIt+aYr+WQpuaLpeacieafkOS4gOS4quadg+mZkO+8jOW5tuWwhuiPnOWNleS7juWKoOi9veWIl+ihqOenu+mZpAogKgogKiBAcGFyYW0gcGVybWlzc2lvbgogKiBAcGFyYW0gcm91dGUKICogQHJldHVybnMge2Jvb2xlYW59CiAqLwovLyBmdW5jdGlvbiBoYXNQZXJtaXNzaW9uIChwZXJtaXNzaW9uLCByb3V0ZSkgewovLyBpZiAocm91dGUubWV0YSAmJiByb3V0ZS5tZXRhLnBlcm1pc3Npb24pIHsKLy8gICBsZXQgZmxhZyA9IGZhbHNlCi8vICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IHBlcm1pc3Npb24ubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsgLy8g5ZCO5pyf5Y+v5Lul5L+u5pS577yM5aaC5p6c5LiA5Liq55So5oi35aSa5Liq6KeS6ImyCi8vICAgICBmbGFnID0gcm91dGUubWV0YS5wZXJtaXNzaW9uLmluY2x1ZGVzKHBlcm1pc3Npb25baV0pCi8vICAgICBpZiAoZmxhZykgewovLyAgICAgICByZXR1cm4gdHJ1ZQovLyAgICAgfQovLyAgIH0KLy8gICByZXR1cm4gZmFsc2UKLy8gfQovLyByZXR1cm4gdHJ1ZQovLyB9CgovKioKICog5Y2V6LSm5oi35aSa6KeS6Imy5pe277yM5L2/55So6K+l5pa55rOV5Y+v6L+H5ruk6KeS6Imy5LiN5a2Y5Zyo55qE6I+c5Y2VCiAqCiAqIEBwYXJhbSByb2xlcwogKiBAcGFyYW0gcm91dGUKICogQHJldHVybnMgeyp9CiAqLwovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKCmZ1bmN0aW9uIGhhc1JvbGUocm9sZXMsIHJvdXRlKSB7CiAgaWYgKHJvdXRlLm1ldGEgJiYgcm91dGUubWV0YS5yb2xlcykgewogICAgcmV0dXJuIHJvdXRlLm1ldGEucm9sZXMuaW5jbHVkZXMocm9sZXMuaWQpOwogIH0gZWxzZSB7CiAgICByZXR1cm4gdHJ1ZTsKICB9Cn0gLy8gZnVuY3Rpb24gZmlsdGVyQXN5bmNSb3V0ZXIgKHJvdXRlck1hcCwgcm9sZXMpIHsKLy8gICBjb25zdCBhY2Nlc3NlZFJvdXRlcnMgPSByb3V0ZXJNYXAuZmlsdGVyKHJvdXRlID0+IHsKLy8gICAgIGlmIChoYXNQZXJtaXNzaW9uKHJvbGVzLCByb3V0ZSkpIHsKLy8gICAgICAgaWYgKHJvdXRlLmNoaWxkcmVuICYmIHJvdXRlLmNoaWxkcmVuLmxlbmd0aCkgewovLyAgICAgICAgIHJvdXRlLmNoaWxkcmVuID0gZmlsdGVyQXN5bmNSb3V0ZXIocm91dGUuY2hpbGRyZW4sIHJvbGVzKQovLyAgICAgICB9Ci8vICAgICAgIHJldHVybiB0cnVlCi8vICAgICB9Ci8vICAgICByZXR1cm4gZmFsc2UKLy8gICB9KQovLyAgIHJldHVybiBhY2Nlc3NlZFJvdXRlcnMKLy8gfQoKCnZhciBwZXJtaXNzaW9uID0gewogIHN0YXRlOiB7CiAgICByb3V0ZXJzOiBjb25zdGFudFJvdXRlck1hcCwKICAgIGFkZFJvdXRlcnM6IFtdCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIFNFVF9ST1VURVJTOiBmdW5jdGlvbiBTRVRfUk9VVEVSUyhzdGF0ZSwgcm91dGVycykgewogICAgICBzdGF0ZS5hZGRSb3V0ZXJzID0gcm91dGVyczsKICAgICAgc3RhdGUucm91dGVycyA9IGNvbnN0YW50Um91dGVyTWFwLmNvbmNhdChyb3V0ZXJzKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIEdlbmVyYXRlUm91dGVzOiBmdW5jdGlvbiBHZW5lcmF0ZVJvdXRlcyhfcmVmLCBkYXRhKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgLy8gY29uc3QgeyByb2xlcyB9ID0gZGF0YQogICAgICAgIHZhciByb3V0ZXMgPSBsb2Rhc2guY2xvbmVEZWVwKGFzeW5jUm91dGVyTWFwKTsgLy8gaWYgKHVzZXIudXNlclR5cGUgJiYgdXNlci51c2VyVHlwZSA9PT0gJ3NjaG9vbCcpIHsKCiAgICAgICAgcm91dGVzID0gbG9kYXNoLmNsb25lRGVlcChhc3luY1JvdXRlck1hcCk7IC8vIH0gZWxzZSBpZiAodXNlci51c2VyVHlwZSAmJiB1c2VyLnVzZXJUeXBlID09PSAnc3R1ZGVudCcpIHsKICAgICAgICAvLyAgIHJvdXRlcyA9IGxvZGFzaC5jbG9uZURlZXAoYXN5bmNTdHVkZW50Um91dGVyTWFwKQogICAgICAgIC8vIH0KICAgICAgICAvLyBjb25zdCBhY2Nlc3NlZFJvdXRlcnMgPSBmaWx0ZXJBc3luY1JvdXRlcihyb3V0ZXMsIHJvbGVzKQoKICAgICAgICBjb21taXQoJ1NFVF9ST1VURVJTJywgcm91dGVzKTsKICAgICAgICByZXNvbHZlKCk7CiAgICAgIH0pOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgcGVybWlzc2lvbjs="},{"version":3,"sources":["/Users/yushengnan/bysj/ysn/src/store/modules/permission.js"],"names":["asyncRouterMap","constantRouterMap","lodash","hasRole","roles","route","meta","includes","id","permission","state","routers","addRouters","mutations","SET_ROUTERS","concat","actions","GenerateRoutes","data","commit","Promise","resolve","routes","cloneDeep"],"mappings":";;;;AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,wBAAlD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;AAC7B,MAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWF,KAA7B,EAAoC;AAClC,WAAOC,KAAK,CAACC,IAAN,CAAWF,KAAX,CAAiBG,QAAjB,CAA0BH,KAAK,CAACI,EAAhC,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEV,iBADJ;AAELW,IAAAA,UAAU,EAAE;AAFP,GADU;AAKjBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE,qBAACJ,KAAD,EAAQC,OAAR,EAAoB;AAC/BD,MAAAA,KAAK,CAACE,UAAN,GAAmBD,OAAnB;AACAD,MAAAA,KAAK,CAACC,OAAN,GAAgBV,iBAAiB,CAACc,MAAlB,CAAyBJ,OAAzB,CAAhB;AACD;AAJQ,GALM;AAWjBK,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,gCACqBC,IADrB,EAC2B;AAAA,UAAhBC,MAAgB,QAAhBA,MAAgB;AAChC,aAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5B;AACA,YAAIC,MAAM,GAAGpB,MAAM,CAACqB,SAAP,CAAiBvB,cAAjB,CAAb,CAF4B,CAG5B;;AACGsB,QAAAA,MAAM,GAAGpB,MAAM,CAACqB,SAAP,CAAiBvB,cAAjB,CAAT,CAJyB,CAK5B;AACA;AACA;AACA;;AACAmB,QAAAA,MAAM,CAAC,aAAD,EAAgBG,MAAhB,CAAN;AACAD,QAAAA,OAAO;AACR,OAXM,CAAP;AAYD;AAdM;AAXQ,CAAnB;AA6BA,eAAeZ,UAAf","sourcesContent":["import { asyncRouterMap, constantRouterMap } from '@/config/router.config'\nimport lodash from 'lodash'\n\n/**\n * 过滤账户是否拥有某一个权限，并将菜单从加载列表移除\n *\n * @param permission\n * @param route\n * @returns {boolean}\n */\n// function hasPermission (permission, route) {\n  // if (route.meta && route.meta.permission) {\n  //   let flag = false\n  //   for (let i = 0, len = permission.length; i < len; i++) { // 后期可以修改，如果一个用户多个角色\n  //     flag = route.meta.permission.includes(permission[i])\n  //     if (flag) {\n  //       return true\n  //     }\n  //   }\n  //   return false\n  // }\n  // return true\n// }\n\n/**\n * 单账户多角色时，使用该方法可过滤角色不存在的菜单\n *\n * @param roles\n * @param route\n * @returns {*}\n */\n// eslint-disable-next-line\nfunction hasRole(roles, route) {\n  if (route.meta && route.meta.roles) {\n    return route.meta.roles.includes(roles.id)\n  } else {\n    return true\n  }\n}\n\n// function filterAsyncRouter (routerMap, roles) {\n//   const accessedRouters = routerMap.filter(route => {\n//     if (hasPermission(roles, route)) {\n//       if (route.children && route.children.length) {\n//         route.children = filterAsyncRouter(route.children, roles)\n//       }\n//       return true\n//     }\n//     return false\n//   })\n//   return accessedRouters\n// }\n\nconst permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: []\n  },\n  mutations: {\n    SET_ROUTERS: (state, routers) => {\n      state.addRouters = routers\n      state.routers = constantRouterMap.concat(routers)\n    }\n  },\n  actions: {\n    GenerateRoutes ({ commit }, data) {\n      return new Promise(resolve => {\n        // const { roles } = data\n        let routes = lodash.cloneDeep(asyncRouterMap)\n        // if (user.userType && user.userType === 'school') {\n           routes = lodash.cloneDeep(asyncRouterMap)\n        // } else if (user.userType && user.userType === 'student') {\n        //   routes = lodash.cloneDeep(asyncStudentRouterMap)\n        // }\n        // const accessedRouters = filterAsyncRouter(routes, roles)\n        commit('SET_ROUTERS', routes)\n        resolve()\n      })\n    }\n  }\n}\n\nexport default permission\n"]}]}