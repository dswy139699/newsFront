<template>
  <page-header-wrapper>
    <template v-slot:content>
      <div class="page-header-content">
      </div>
    </template>
    <div class="content">
      <div class="table" style="margin-top:10px;">
        <a-table
          :row-selection="{ selectedRowKeys: selectedRowKeys, onChange: onSelectChange }"
          :columns="columns"
          :data-source="data"
          @change="changePage"
          :loading="loading"
          :pagination="pagination"
          :rowKey="record=>record.name+record.teachingMaterialName"
        >
          <span slot="action" slot-scope="text,record">
            <a @click="onShow(record)">付款</a>
          </span>
          <template slot="footer" v-if="data&&data.length>0">
            <a-button type="primary" @click="submitPay">提交付款</a-button>
          </template>
        </a-table>
      </div>
      <!--      弹出框支付-->
      <div class="modal" ref="modal">
        <a-modal
          title="支付"
          :visible="visible"
          @cancel="OnCancel"
          :footer="false"
          destroyOnClose
          :getContainer="()=>this.$refs.modal"
        >
          <div class="pay">
            <div style="text-align: center;margin-bottom:20px;">
              <a-button @click="payTypeFun(1)" type="dashed" :style="{marginRight:'30px'}" :class="payType ? 'borderStyle' : ''">
                <IconFont type="icon-weixinzhifu" style="width:40px;height:40px;display: inline-block;font-size: 40px"/>
              </a-button>
              <a-button @click="payTypeFun(0)" type="dashed" :class="!payType ? 'borderStyle' : ''">
                <IconFont type="icon-zhifubao" style="width:40px;height:40px;display: inline-block;font-size: 40px"/>
              </a-button>
            </div>
            <div>
              <iframe v-if="payUrl" :src="payUrl" width="100%" style="border:none" height="500px">
              </iframe>
            </div>
          </div>
        </a-modal>
      </div>
    </div>
  </page-header-wrapper>
</template>

<script>
  import GlobalForm from '@/components/GlobalForm'
  import { formData } from './formData'
  import { services } from './service'

  const columns = [
    {
      title: '课程名称',
      dataIndex: 'name',
      key: 'name'
    },
    {
      title: '教材名称',
      dataIndex: 'teachingMaterialName',
      key: 'teachingMaterialName'
    },
    {
      title: '应付金额',
      dataIndex: 'price',
      key: 'price'
    }
    // {
    //   title: '班级',
    //   dataIndex: 'className',
    //   key: 'className'
    // },
    // {
    //   title: '是否付款',
    //   dataIndex: 'payed',
    //   key: 'payed'
    // },
    // {
    //   title: '征订日期',
    //   dataIndex: 'solicitTime',
    //   key: 'solicitTime'
    // }
    // {
    //   title: '操作',
    //   key: 'action',
    //   scopedSlots: { customRender: 'action' }
    // }
  ]
  export default {
    name: 'Index',
    components: {
      GlobalForm
    },
    data () {
      return {
        columns,
        title: '新增课程',
        loading: false,
        payType: 0, // 支付宝
        payUrl: null, // 支付链接
        selectRowValues: [],
        selectedRowKeys: [], // 选中的table数据
        editInfo: null, // 需要编辑的该条数据的信息
        visible: false,
        data: [
        //         {
        //   id: 1,
        //   payPrice: '123',
        //   courseName: '大学物理',
        //   bookName: '大学物理',
        //   studentName: '张三',
        //   studentNum: '089789',
        //   className: '01班',
        //   solicitTime: '2019-09-12 12:00'
        // }, {
        //   id: 2,
        //   payPrice: '123',
        //   courseName: '大学物理',
        //   bookName: '大学物理',
        //   studentName: '李四',
        //   studentNum: '089789',
        //   className: '02班',
        //   solicitTime: '2019-09-12 12:00'
        // }
        ],
        pagination: {// 分页
          current: 1,
          pageSize: 20,
          total: 0
        }
      }
    },
    computed: {
      getFormData () {
        return formData.getFormData(this)
      }
    },
    created () {
      // this.$store.dispatch('GetSchool')
    },
    mounted () {
      const userInfo = this.$store.getters.userInfo || {}
      services.getStudent({ schoolId: userInfo.schoolId, id: userInfo.id }).then(response => {
                      this.data = response.subscriptionsDetailList || []
              })
      // services.toPayAsPC().then(response => {
      //   console.log(response)
      //   window.open(response)
      // })
      // this.searchData = { schoolId: this.$store.getters.schoolNameList[0] ? this.$store.getters.schoolNameList[0].value : '' }// 查询数据
      // this.getStudent({ pageIndex: this.pagination.current, pageSize: this.pagination.pageSize, ...this.searchData })
    },
    methods: {
      // 分页切换
      changePage (pagination) {
        this.pagination.current = pagination.current
        this.getStudent({ pageIndex: pagination.current, pageSize: this.pagination.pageSize, ...this.searchData })
        // this.getProcessList({ process_label: 'Done', pageIndex: pagination.current, pageSize: this.pagination.pageSize, process_config_type: 'individualCase', ...this.params })
      },
      search () { // 查询
        const params = this.$refs.schoolSerch.getFieldsValue()
        this.searchData = { ...params, schoolId: this.$store.getters.selectSchoolInfo.value || '' }
        this.pagination.current = 1
        this.getStudent({ pageIndex: 1, pageSize: this.pagination.pageSize, ...this.searchData })
      },
      reset () { // 重置
        this.$refs.schoolSerch.resetFields()
        // this.searchData = { schoolId: this.$store.getters.schoolNameList[0] ? this.$store.getters.schoolNameList[0].value : '' }// 查询数据
      },
      onSelectChange (selectedRowKeys, value) { // table选择
        // console.log('selectedRowKeys changed: ', selectedRowKeys, value)
        this.selectRowValues = value
        this.selectedRowKeys = selectedRowKeys
      },
      onShow (data) { // 查看已付款学生信息详情
        this.$router.push({ path: '/book/solicitManage/unPayedInfo', query: { id: data.id } })
      },
      getStudent (data) {
        this.loading = true
        services.getStudent({ ...data, isPayment: 0 }).then(response => {
          this.data = response.records || []
          this.pagination.total = response.total || 0
          this.loading = false
        })
      },
      submitPay () {
        this.payType = 0
        this.visible = true
        services.toPayAsPC().then(response => {
          this.payUrl = response// 默认支付宝方式
          // window.open(response)
        })
      },
      payTypeFun (type) { // 切换支付方式
          this.payType = type
        if (type) {
          // TODO 调微信接口
        } else {
          // TODO 调支付宝接口
        }
      },
      OnCancel () {
        console.log(123)
        this.visible = false
      }
    }
  }
</script>

<style scoped lang="less">
  @import "../style.less";
  .content{
  background: #fff;
  padding:20px;
  border-radius:2px;
    .pay{
      .borderStyle{
        border-color:#1890ff;
      }
      /deep/ .ant-btn{
        height:auto;
        padding:10px 15px;
      }
    }
  .modal {
    /deep/ .ant-modal {
      width: 900px;
      min-width: 900px;
    }
    /deep/ .ant-alert {
      padding: 5px 5px 5px 35px;
      font-size: 12px;
      .ant-alert-icon {
        top: 8px;
      }
    }
  }
}
</style>
