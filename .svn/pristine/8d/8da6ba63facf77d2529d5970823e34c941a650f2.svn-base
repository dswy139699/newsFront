<template>
  <page-header-wrapper>
    <template v-slot:content>
      <div class="page-header-content">
      </div>
    </template>
    <div class="content">
      <div>
        <GlobalForm :dataSource="getFormData" ref="schoolSerch" id="schoolSearch">
          <template v-slot:button>
            <div style="margin-top:4px;text-align: right">
              <a-button type="primary" @click="search">
                查询
              </a-button>
              <a-button style="margin-left:10px" @click="reset">
                重置
              </a-button>
            </div>
          </template>
        </GlobalForm>
      </div>
      <div style="text-align: left">
        <a-button type="primary" @click="increase">
          新增
        </a-button>
      </div>
      <div class="table scroll" style="margin-top:10px;">
        <a-table
          :row-selection="{ selectedRowKeys: selectedRowKeys, onChange: onSelectChange }"
          :columns="columns"
          :data-source="data"
          @change="changePage"
          :loading="loading"
          :scroll="{x:1500}"
          :pagination="pagination"
          :rowKey="record=>record.id"
        >
          <span slot="price" slot-scope="text,data">
            <a @click="openInsertNum(data)"><span style="display: inline-block;width:60px">{{ text }}</span>
            </a>
          </span>
          <span slot="must" slot-scope="text">
            {{ text ? '是' : '否' }}
          </span>
          <span slot="offline" slot-scope="text">
            {{ text ? '是' : '否' }}
          </span>
          <span slot="action" slot-scope="text,data">
            <a @click="onEdit(data)">编辑</a>
            <a-divider type="vertical" />
            <a-popconfirm
              title="确定删除?"
              ok-text="是"
              cancel-text="否"
              @confirm="delStu(data)"
            >
              <a>删除</a>
            </a-popconfirm>
          </span>
          <template slot="footer" slot-scope="" v-if="data&&data.length>0">
            <a-button type="primary" @click="delStus">删除所选数据</a-button>
          </template>
        </a-table>
      </div>
      <div class="modal" ref="modal">
        <a-modal
          :title="title"
          :visible="visible"
          @cancel="cancel"
          @ok="handelOk"
          destroyOnClose
          :getContainer="()=>this.$refs.modal"
        >
          <div class="increase">
            <GlobalForm ref="increaseDom" :dataSource="getIncreaseForm" id="increaseDom">
              <template v-slot:refundPrice>
                <a-alert style="margin:5px 0 0 10px" message="默认可不填，如果涉及到图书退款定价，请在这里填写，然后系统算出该退款差价。如拍后折扣实价是50元，退款定价可以设置成47元。那么退3元。" type="warning" show-icon />
              </template>
              <template v-slot:refundDiscount>
                <a-alert style="margin:5px 0 0 10px" message=" 如:0.78 如果填写了退款定价就必须填写" type="warning" show-icon />
              </template>
              <template v-slot:disBuy>
                <a-alert style="margin:5px 0 0 10px" message="如果选择否，那么学生不可以在线征订" type="warning" show-icon />
              </template>
              <template v-slot:must>
                <a-alert style="margin:5px 0 0 10px" message=" 如果选择是，学生没有选择余地，必须要订这本书。" type="warning" show-icon />
              </template>
              <!--<template v-slot:buildId>-->
              <!--<a-alert style="margin:5px 0 0 10px" message="如：五号楼" type="warning" show-icon />-->
              <!--</template>-->
              <!--<template v-slot:password>-->
              <!--<a-alert style="margin:5px 0 0 10px" message="密码必须六位以上" type="warning" show-icon />-->
              <!--</template>-->
            </GlobalForm>
          </div>
        </a-modal>
      </div>
      <a-modal
        title="征订数量"
        :visible="visibleNum"
        @cancel="cancelNum"
        @ok="handleOkNum"
      >
        <div class="familyPeople">
          <GlobalForm ref="buyNumDom" :dataSource="formData" id="buyNumDom">
          </GlobalForm>
        </div>
      </a-modal>
    </div>
  </page-header-wrapper>
</template>

<script>
  import GlobalForm from '@/components/GlobalForm'
  import { formData } from './formData'
  import { checkPhone, checkEmail, checkIdCard } from '@/utils/checkFun'
  import { services } from './service'
  const columns = [
    {
      title: '教材名',
      dataIndex: 'name',
      key: 'name',
      width: 260,
      ellipsis: true,
      fixed: 'left'
    },
    {
      title: '出版社',
      dataIndex: 'press',
      width: 160,
      key: 'press'
    },
    {
      title: '所属学校',
      dataIndex: 'schoolName',
      width: 140,
      ellipsis: true,
      key: 'schoolName'
    },
    // {
    //   title: '所属课程',
    //   dataIndex: 'courseName',
    //   width: 140,
    //   ellipsis: true,
    //   key: 'courseName'
    // },
    {
      title: '必须征订',
      dataIndex: 'must',
      width: 100,
      key: 'must',
      scopedSlots: { customRender: 'must' }
    },
    {
      title: '可征订',
      dataIndex: 'offline',
      width: 100,
      key: 'offline',
      scopedSlots: { customRender: 'offline' }
    },
    // {
    //   title: '定价',
    //   dataIndex: 'price',
    //   width: 60,
    //   ellipsis: true,
    //   scopedSlots: { customRender: 'price' },
    //   key: 'price'
    // },
    {
      title: '折扣',
      dataIndex: 'discount',
      width: 60,
      ellipsis: true,
      key: 'discount'
    },
    {
      title: '退款定价',
      dataIndex: 'refundPrice',
      width: 100,
      ellipsis: true,
      key: 'refundPrice'
    },
    {
      title: '退款折扣',
      dataIndex: 'refundDiscount',
      width: 100,
      ellipsis: true,
      key: 'refundDiscount'
    },
    {
      title: '征订数量',
      dataIndex: 'materialCount',
      key: 'materialCount'
      // scopedSlots: { customRender: 'buyNum' }
    },
    {
      title: '定价',
      dataIndex: 'price',
      width: 60,
      ellipsis: true,
      fixed: 'right',
      scopedSlots: { customRender: 'price' },
      key: 'price'
    },
    {
      title: '操作',
      key: 'action',
      width: 120,
      scopedSlots: { customRender: 'action' },
      fixed: 'right'
    }
  ]
  export default {
    name: 'Index',
    components: {
      GlobalForm
    },
    data () {
      return {
        columns,
        visibleNum: false, // 征订数量modal
        refundPrice: false, //
        title: '新增教材',
        loading: true,
        searchData: {},
        selectedRowKeys: [], // 选中的table数据
        editInfo: null, // 需要编辑的该条数据的信息
        visible: false,
        formData: [
          {
            type: 'input',
            label: '征订数量',
            col: '24',
            id: 'price',
            buyNumId: null, // 需要更改的数据的id
            onChange: this.numberChange,
            layout: {
              labelCol: '80px'
            }
          }
        ],
        data: [
          {
            bookName: '组织行为学-互联时代的视角',
            schoolName: '上海外国语大学',
            press: '机械工业出版社',
            courseName: '组织行为学',
            must: '是',
            disBuy: '否',
            price: '39.8',
            refundPrice: '38',
            discount: '1',
            refundDiscount: '0.8',
            buyNum: 58,
            id: 1
          },
          {
            schoolName: '上海大学',
            bookName: '自动控制原理及应用项目式教程',
            press: '冶金工业出版社',
            courseName: '控制与调节技术',
            must: '是',
            disBuy: '否',
            price: '39.8',
            refundPrice: '38',
            discount: '1',
            refundDiscount: '0.8',
            buyNum: 58,
            id: 2
          }
        ],
        pagination: {// 分页
          current: 1,
          pageSize: 20,
          total: 0
        }
      }
    },
    computed: {
      getFormData () {
        return formData.getFormData(this)
      },
      getIncreaseForm () {
        return formData.getIncreaseForm(this)
      }
    },
    created () {
      // this.$store.dispatch('GetSchool')
      // this.$store.dispatch('GetCourse')
    },
    mounted () {
      this.searchData = { schoolId: this.$store.getters.schoolNameList[0] ? this.$store.getters.schoolNameList[0].value : '' }// 查询数据
      // this.$store.dispatch('GetCourse', { schoolId: this.searchData.schoolId })
      this.getTeachingMaterialForPage({ pageIndex: 1, pageSize: this.pagination.pageSize, ...this.searchData })
    },
    methods: {
      // 校验身份证号是否合法
      checkIdCard (rule, value, callback) {
        // const form = this.$refs.caseForm
        if (value && !checkIdCard(value)) {
          const title = '请输入正确的身份证号'
          callback(title)
        } else {
          callback()
        }
      },
      // 校验电话号码是否标准
      checkTel (rule, value, callback) {
        if (value && !checkPhone(value)) {
          const title = '请输入正确格式的号码'
          callback(title)
        } else {
          callback()
        }
      },
      // 校验邮箱格式
      checkEma (rule, value, callback) {
        if (value && !checkEmail(value)) {
          const title = '请输入正确格式的邮箱'
          callback(title)
        } else {
          callback()
        }
      },
      // check (rule, value, callback) {
      //   if (value && value.length < 7) {
      //     const title = '密码不少于六位数'
      //     callback(title)
      //   } else {
      //     callback()
      //   }
      // },
      // 分页切换
      changePage (pagination) {
        this.pagination.current = pagination.current
        this.getTeachingMaterialForPage({ pageIndex: pagination.current, pageSize: this.pagination.pageSize, ...this.searchData })
        // this.getProcessList({ process_label: 'Done', pageIndex: pagination.current, pageSize: this.pagination.pageSize, process_config_type: 'individualCase', ...this.params })
      },
      increase () { // 新增
        this.title = '新增教材'
        this.visible = true
        this.editInfo = null
      },
      onEdit (data) {
        const newData = this._.cloneDeep(data)
        this.title = '编辑教材'
        this.editInfo = data
        this.visible = true
        this.$nextTick(() => { // 延时，不然dom没有加载出来
          setTimeout(() => {
            this.$refs.increaseDom.setFieldsValue(this._.pick(newData, 'name', 'press', 'schoolId',
              'isbn', 'edition', 'price', 'discount', 'oldBookDiscount',
              'refundPrice', 'refundDiscount', 'awards', 'author', 'materialCount', 'tellbackInfo', 'remark', 'offline', 'must'))
            // this.$refs.increaseDom.setFieldsValue({ ...newData, courseName: [newData.courseName] })
            if (data.refundDiscount) { // 如果退款折扣有值，那么退款定价必填
              this.refundPrice = true
            } else {
              this.refundPrice = false
            }
          })
        })
      },
      handelOk () { // 新增确定
        const params = this.$refs.increaseDom.handleSubmit()
        // console.log(params)
        if (params) {
          if (this.editInfo) { // 编辑情况
            this.updateTeachingMaterial({ ...this.editInfo, ...params })
          } else { // 新增情况
            this.saveTeachingMaterial(params)
          }
          this.cancel()
        }
      },
      // cancel
      cancel () {
        this.refundPrice = false
        this.$refs.increaseDom.resetFields()
        this.visible = false
      },
      search () { // 查询
        const params = this.$refs.schoolSerch.getFieldsValue()
        this.searchData = params
        this.pagination.current = 1
        this.getTeachingMaterialForPage({ pageIndex: 1, pageSize: this.pagination.pageSize, ...params })
      },
      reset () { // 重置
        this.$refs.schoolSerch.resetFields()
        this.searchData = { schoolId: this.$store.getters.schoolNameList[0] ? this.$store.getters.schoolNameList[0].value : '' }// 查询数据
      },
      // 编辑装订数量
      openInsertNum (data) {
        this.buyNumId = data.id
        this.visibleNum = true
        this.$nextTick(() => { // 延时，不然dom没有加载出来
          setTimeout(() => {
            this.$refs.buyNumDom.setFieldsValue({ price: data.price })
          })
        })
      },
      onSelectChange (selectedRowKeys) { // table选择
        // console.log('selectedRowKeys changed: ', selectedRowKeys);
        this.selectedRowKeys = selectedRowKeys
      },
      // 征订数量cancel
      cancelNum () {
        this.visibleNum = false
      },
      // 弹出框确定
      handleOkNum () {
        let newData = {}
        const buyNum = this.$refs.buyNumDom.getFieldsValue().price || 0
        for (let i = 0; i < this.data.length; i++) {
          if (this.buyNumId === this.data[i].id) {
            newData = this._.cloneDeep(this.data[i])
            newData.price = buyNum
            break
            // this.data[i].buyNum = buyNum
          }
        }
        this.updateTeachingMaterial(newData)
        this.cancelNum()
      },
      numChange (value, type) {
        let newValue = value
        newValue = newValue.replace(/[^\d.]/g, '')// 清除“数字”和“.”以外的字符
        newValue = newValue.replace(/^\./g, '')// 验证第一个字符是数字而不是.
        newValue = newValue.replace(/\.{2,}/g, '.')// 只保留第一个. 清除多余的.
        newValue = newValue.replace('.', '$#$').replace(/\./g, '').replace('$#$', '.')
        this.$nextTick(() => { // 延时，不然dom没有加载出来
          setTimeout(() => {
            this.$refs.increaseDom.setFieldsValue({ [type]: newValue })
            if (type === 'refundDiscount') { // 如果退款折扣有值，那么退款定价必填
              if (newValue) {
                this.refundPrice = true
              } else {
                this.refundPrice = false
              }
            }
          })
        })
      },
      numberChange (value) {
        let newValue = value
        newValue = newValue.replace(/[^\d.]/g, '')// 清除“数字”和“.”以外的字符
        newValue = newValue.replace(/^\./g, '')// 验证第一个字符是数字而不是.
        newValue = newValue.replace(/\.{2,}/g, '.')// 只保留第一个. 清除多余的.
        newValue = newValue.replace('.', '$#$').replace(/\./g, '').replace('$#$', '.')
        this.$nextTick(() => { // 延时，不然dom没有加载出来
          setTimeout(() => {
            this.$refs.buyNumDom.setFieldsValue({ price: newValue })
          })
        })
      },
      getTeachingMaterialForPage (data) {
        this.loading = true
        services.getTeachingMaterialForPage(data).then(response => {
          this.data = response.records || []
          this.pagination.total = response.total || 0
          this.loading = false
        })
      },
      // 新增
      saveTeachingMaterial (data) {
        services.saveTeachingMaterial(data).then(response => {
          this.$notification.success({
            message: '新增成功'
          })
          this.getTeachingMaterialForPage({ pageIndex: this.pagination.current, pageSize: this.pagination.pageSize, ...this.searchData })
        })
      },
      // 更新
      updateTeachingMaterial (data) {
        services.updateTeachingMaterial(data).then(response => {
          this.$notification.success({
            message: '更新成功'
          })
          this.getTeachingMaterialForPage({ pageIndex: this.pagination.current, pageSize: this.pagination.pageSize, ...this.searchData })
        })
      },
      delStu (data) { // 删除一个
        this.delTeachingMaterial({ idList: [data.id] })
      },
      delStus () { // 删除多个
        this.delTeachingMaterial({ idList: this.selectedRowKeys })
      },
      // 删除
      delTeachingMaterial (data) {
        services.delTeachingMaterial(data).then(response => {
          this.$notification.success({
            message: '删除成功'
          })
          this.getTeachingMaterialForPage({
            pageIndex: this.pagination.current,
            pageSize: this.pagination.pageSize,
            ...this.searchData
          })
        })
      }
    }
  }
</script>

<style scoped lang="less">
.content{
  background: #fff;
  padding:20px;
  border-radius:2px;
  .modal {
    /deep/ .ant-modal {
      width: 900px;
      min-width: 900px;
    }
    /deep/ .ant-alert {
      padding: 5px 5px 5px 35px;
      font-size: 12px;
      .ant-alert-icon {
        top: 8px;
      }
    }
  }
}
</style>
